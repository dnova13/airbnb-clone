FROM alpine:latest

ARG USERNAME=test
ARG PW=1234

ARG PROJECT_NAME=airbnb-clone


ARG PYTHON_VERSION=3.9.4
ARG NODE_VERSION=16.20.0

## 환경 변수 설정
ENV HOME /root
ENV PYENV_ROOT $HOME/.pyenv
ENV PATH $PYENV_ROOT/bin:$PATH


# Install necessary packages
RUN apk update && apk add --no-cache \
    bash wget curl git vim nano openssh openssh-server \
    build-base \
    libffi-dev \
    openssl-dev \
    readline-dev \
    zlib-dev \
    bzip2-dev \
    ncurses-dev \
    ncurses \
    postgresql-dev supervisor 
    

# Create a directory for SSH daemon to run
RUN mkdir /var/run/sshd

# Generate SSH host keys
RUN ssh-keygen -A

# optional 둘중하나 선택 또는 모두
# root 암호 설정 
RUN echo "root:${PW}" | chpasswd

# 새로운 사용자 생성
RUN adduser -D -s /bin/bash ${USERNAME}
RUN echo "${USERNAME}:${PW}" | chpasswd
RUN adduser ${USERNAME} wheel
# Python installation and setup
## pyenv installation
RUN curl https://pyenv.run | bash

## Initialize pyenv settings
RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $HOME/.profile \
    && echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $HOME/.profile \
    && echo 'eval "$(pyenv init --path)"' >> $HOME/.profile \
    && echo 'eval "$(pyenv init -)"' >> $HOME/.profile \
    && echo 'eval "$(pyenv virtualenv-init -)"' >> $HOME/.profile

## Install Python using pyenv (e.g., Python 3.9.4)
RUN /bin/sh -c "source $HOME/.profile && pyenv install ${PYTHON_VERSION}"
RUN /bin/sh -c "source $HOME/.profile && pyenv global ${PYTHON_VERSION}"

# SSH server configuration
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config


# Start SSH service
RUN /usr/sbin/sshd



# Project settings
WORKDIR /app/${PROJECT_NAME}
COPY . .

# Node.js setup
## Install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash



## Install and use Node.js
RUN /bin/bash -c "source $HOME/.nvm/nvm.sh \
    && nvm install ${NODE_VERSION} \
    && nvm use ${NODE_VERSION}"

# RUN npm i
RUN /bin/bash -c "source $HOME/.nvm/nvm.sh && npm i"

# 프로젝트 폴더 생성 및 권한 설정
# RUN chown -R ${USERNAME}:${USERNAME} /app

# venv 설정
## Docker 이미지 빌드 과정에서 사용하는 쉘은 이미지 빌드를 위한 임시 쉘이라서 
## .bashrc 파일은 로드되지 않아서 pyenv로 설치한 python 으로 정상적으로 추가되지 않아서
## pyenv 로 설정한 python -m venv 안먹힘.
RUN /root/.pyenv/shims/python -m venv /app/myvenv
RUN echo "cd /app" >> $HOME/.bashrc \
    && echo 'source myvenv/bin/activate' >> $HOME/.bashrc \
    && echo 'cd ${PROJECT_NAME}' >> $HOME/.bashrc 

RUN /app/myvenv/bin/pip install --upgrade pip
RUN /app/myvenv/bin/pip install -r requirements.txt

# Install uwsgi and daphne
RUN /app/myvenv/bin/pip install uwsgi && /app/myvenv/bin/pip install daphne

# Create log directory for services
RUN mkdir -p /var/log/service
RUN chown -R ${USERNAME}:${USERNAME} /var/log/service

# Nginx setup
COPY .config/nginx/my.conf /etc/nginx/conf.d/default.conf

# Supervisor setup
COPY .config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Run supervisor in foreground
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]